name: GOTCHA Build and Test

on:
  pull_request:
    branches: [ main, develop ]
  push:

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-16.04, ubuntu-18.04, ubuntu-20.04, ubuntu-22.04 ]
        compiler: [ gcc ]
        gcc: [ 7, 8, 9, 10, 11 ]

    name: ${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.gcc }}

    runs-on: ${{ matrix.os }}

    env:
      CC: gcc-${{ matrix.gcc }}
      CXX: g++-${{ matrix.gcc }}

    steps:
      - name: Push checkout
        if: github.event_name == 'push'
        uses: actions/checkout@v3

      - name: PR checkout
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{ matrix.gcc }}

      - name: Install additional packages
        run: |
          sudo apt-get update
          sudo apt-get install libtool-bin

      - name: Install Spack
        uses: kzscisoft/install-spack@v1
        with:
          version: develop

      - name: Set up packages.yaml
        run: |
          test -f $GITHUB_WORKSPACE/.spack/etc/spack/packages.yaml || cat > $GITHUB_WORKSPACE/.spack/etc/spack/packages.yaml << 'EOF'
          packages:
            all:
              target: [x86_64]
              providers:
                mpi: [openmpi]
            autoconf:
              buildable: False
              externals:
              - spec: "autoconf@2.69"
                prefix: /usr
            automake:
              buildable: False
              externals:
              - spec: "automake@1.16.1"
                prefix: /usr
            libtool:
              buildable: False
              externals:
              - spec: "libtool@2.4.6"
                prefix: /usr
            m4:
              buildable: False
              externals:
              - spec: "m4@1.4.18"
                prefix: /usr
            pkg-config:
              buildable: False
              externals:
              - spec: "pkg-config@0.29.1"
                prefix: /usr
          EOF
          spack compiler find --scope=user
          if [[ $CC == 'gcc-7' ]]; then
            spack config add "packages:all:compiler:[gcc@7.5.0]"
          elif [[ $CC == 'gcc-8' ]]; then
            spack config add "packages:all:compiler:[gcc@8.4.0]"
          elif [[ $CC == 'gcc-9' ]]; then
            spack config add "packages:all:compiler:[gcc@9.3.0]"
          elif [[ $CC == 'gcc-11' ]]; then
            spack config add "packages:all:compiler:[gcc@11.1.0]"
          else
            spack config add "packages:all:compiler:[gcc@10.3.0]"
          fi
          spack external find
          spack config add modules:prefix_inspections:lib64:[LD_LIBRARY_PATH]
          spack config add modules:prefix_inspections:lib:[LD_LIBRARY_PATH]

      - name: Configure and Build
        run: |
          mkdir build
          pushd build
          cmake -DGOTCHA_ENABLE_TESTS=ON ..
          make V=1
          popd
      - name: Unit Tests
        run: |
          cd build && ctest -VV

      - name: After failure
        if: ${{ failure() }}
        run: |
          cat $GITHUB_WORKSPACE/config.log
          cat $GITHUB_WORKSPACE/t/test-suite.log